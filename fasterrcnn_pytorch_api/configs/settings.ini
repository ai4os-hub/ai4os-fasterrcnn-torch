[model]
# Name of the model and python package to interface with the API
# ! Filled by Cookiecutter template
name = fasterrcnn-pytorch-training-pipeline

[data]
# Base directory for input or example files (for example for testing). If the
# path is relative, it will be appended to the package path.
path = data

[model_dir]
# Path to the folder where to store backbone models locally
path = models

[monitorPORT]
#The port to be opened for monitoring model performance with Tensorboard.
port = 6006


[wandb_token]
#your token to save and monitor your training model in the wandb
token= your_token


[backbones]
# List of available models to train
names= ['fasterrcnn_convnext_small',
    'fasterrcnn_convnext_tiny',
    #'fasterrcnn_custom_resnet',
    #'fasterrcnn_darknet',
    'fasterrcnn_efficientnet_b0',
    'fasterrcnn_efficientnet_b4',
    'fasterrcnn_mbv3_small_nano_head',
    'fasterrcnn_mbv3_large',
   # 'fasterrcnn_mini_darknet_nano_head',
   # 'fasterrcnn_mini_darknet',
    'fasterrcnn_mini_squeezenet1_1_small_head',
    'fasterrcnn_mini_squeezenet1_1_tiny_head',
    'fasterrcnn_mobilenetv3_large_320_fpn',
    'fasterrcnn_mobilenetv3_large_fpn',
   # 'fasterrcnn_nano',
    'fasterrcnn_resnet18',
    'fasterrcnn_resnet50_fpn_v2',
    'fasterrcnn_resnet50_fpn',
    'fasterrcnn_resnet101',
    'fasterrcnn_resnet152',
    'fasterrcnn_squeezenet1_0',
    'fasterrcnn_squeezenet1_1_small_head',
    'fasterrcnn_squeezenet1_1',
    'fasterrcnn_vitdet',
    'fasterrcnn_vitdet_tiny',
    'fasterrcnn_mobilevit_xxs',
    'fasterrcnn_regnet_y_400mf']

[data_augmentation_options]
# List of available data augmentation options.
names= {
        "blur": {"p": 0.1, "blur_limit": 3},
        "motion_blur": {"p": 0.1, "blur_limit": 3},
        "median_blur": {"p": 0.1, "blur_limit": 3},
        "to_gray": {"p": 0.1},
        "random_brightness_contrast": {"p": 0.1},
        "color_jitter": {"p": 0.1},
        "random_gamma": {"p": 0.1},
        "horizontal_flip": {"p": 1.0},
        "vertical_flip": {"p": 1.0},
        "rotate": {"limit": 45},
        "shift_scale_rotate": {"shift_limit": 0.1, "scale_limit": 0.1, "rotate_limit": 30, "p": 0.0},
        "Cutout": {"num_holes": 0, "max_h_size": 0, "max_w_size": 8, "fill_value": 0, "p": 0.0},
        "ChannelShuffle": {"p": 0.0}
    }

#If you want to use rclone to download trained models from nextcloud
#set this variable to true and pass the path to your model directory on the nextcloud
#in the remote variable 
[use_rclone]
value=  True #possible value: True, False

[remote]
# Directory containing trained model for prediction  on the nextcloud  
path = models_sub

#If you have already configured the rclone, just leave 
#these variables untouched, otherwise if you want to use rclone, please specify them.
[RCLONE_CONFIG_RSHARE_PASS]
#Rclone password
password= <password> # replce with your  password
[RCLONE_CONFIG_RSHARE_USER]
#Rclone username
username= user_name # replce with your username
[RCLONE_CONFIG_RSHARE_TYPE]
#Rclone type
type= webdav
[RCLONE_CONFIG_RSHARE_URL]
#Rclone url
url= DEEP_IAM-da6568e7-7fad-43ac-a124-b0f58994d988
[RCLONE_CONFIG_RSHARE_VENDOR]
#Rclone vendor
vendor= ''
[RCLONE_CONFIG]
#Rclone path config
rclone_config = /srv/.rclone/rclone.conf #create this file on your machine and pu the path here

